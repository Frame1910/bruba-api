generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String               @id @unique @default(uuid())
  firstName  String
  lastName   String
  mobile     String?
  email      String?              @unique
  status     Status
  relation   RelationType
  dietary    DietaryRestriction[]
  createdAt  DateTime             @default(now())
  updatedAt  DateTime             @updatedAt
  UserInvite UserInvite[]

  @@map("users")
}

model Invite {
  code           String       @id @unique
  allowPlusOne   Boolean
  sportsCarnival Boolean      @default(false)
  firstSeenAt    DateTime?
  lastSeenAt     DateTime?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  UserInvite     UserInvite[]

  @@map("invites")
}

model UserInvite {
  userId     String
  user       User         @relation(fields: [userId], references: [id])
  invite     Invite       @relation(fields: [inviteCode], references: [code])
  inviteCode String
  status     InviteStatus @default(PENDING)
  isPlusOne  Boolean
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  @@id([userId, inviteCode])
  @@map("user_invites")
}

enum Status {
  ACTIVE
  INACTIVE
  PENDING
}

enum InviteStatus {
  ACCEPTED
  DECLINED
  PENDING
}

enum RelationType {
  PARENT
  CHILD
  SIBLING
  SPOUSE
  FRIEND
}

enum DietaryRestriction {
  VEGETARIAN
  VEGAN
  GLUTEN_FREE
  DAIRY_FREE
  NUT_FREE
  SHELLFISH_FREE
  OTHER
  NONE
}
